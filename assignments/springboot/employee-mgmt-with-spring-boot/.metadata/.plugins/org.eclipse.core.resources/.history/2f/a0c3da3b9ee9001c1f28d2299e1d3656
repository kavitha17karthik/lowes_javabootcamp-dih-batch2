package com.labs.spring.boot.exception;

import java.util.HashMap;
import java.util.Map;

import org.springframework.http.HttpStatus;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.RestControllerAdvice;

@RestControllerAdvice
public class ApplicationExceptionHandler {
	
	/*
	 * @ExceptionHandler(MethodArgumentNotValidException.class)
	 * 
	 * @ResponseStatus(HttpStatus.BAD_REQUEST) public Map<String,String>
	 * handleInvalidArgument(MethodArgumentNotValidException e) { Map<String,String>
	 * errorMap=new HashMap<>();
	 * 
	 * e.getBindingResult().getFieldErrors().forEach(error->{
	 * errorMap.put(error.getField(),error.getDefaultMessage()); }); return
	 * errorMap; }
	 * 
	 * //EmployeeNotfound exception handler -Update and Get
	 * 
	 * @ExceptionHandler(EmployeeNotFoundException.class)
	 * 
	 * @ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)//500 public Map<String,
	 * String> handleEmployeeRelatedException(EmployeeNotFoundException e) {
	 * Map<String,String> errorMap=new HashMap<>();
	 * errorMap.put("errorMessage:",e.getMessage()); return errorMap; }
	 */

}
