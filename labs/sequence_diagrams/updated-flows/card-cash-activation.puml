@startuml
actor Customer as USER
actor Associate as ASSOCIATE
participant UI as UI
participant GENESIS as GENESIS
participant TACHYON as TACHYON
participant PED as PED
participant CR as CR
participant REDUCER as REDUCER

== [CASH, CARD]-activation true Paynow Click ==
USER -> UI: click on paynow button click
group Activate on Paynow
UI -> REDUCER: Get the available payment modes from reducer.
UI -> TACHYON: make an http://localhost - /activate api call to tachyon
note right: activate api should have the paymentModes: ['CASH', 'CARD'] as payload
TACHYON --> UI: response of activated paymentModes as below
alt#Gold #LightBlue paymentModes:[cash:true, card: true]
UI -> UI: Insert/Swipe cash/card
end
alt#Gold #LightBlue paymentModes:[card: true, cash: false]
UI -> UI: Choose payment mode card YES | NO
USER -> UI: customer selected YES
UI -> UI: update the activated paymentMode and show Insert/Swipe card
else #LightSalmon customer selected NO
UI -> UI: Intervention Sign In screen
UI -> TACHYON: /intervention/start - reasonCode: ['PARTIALLY_ACTIVATED']
UI -> TACHYON: /signal { signalType: Error, level:2} - blinking red
ASSOCIATE -> UI: Scan/Manual Login
UI -> UI: Show the options as View Cart | Suspend Sale
alt#Gold #LightSlateGray customer selected View Cart
== start ==
== Hybrid Controller ==
UI -> GENESIS: action=editCart
== BFF Controller ==
UI -> BFF: No api call is required
== Done ==
UI -> UI: clear the tender state to initial state
UI -> UI: Store Mode
else #LightGrey customer selected Suspend Sale
== start ==
== Hybrid Controller ==
UI -> GENESIS: action=suspend api call to get the <XML />
UI -> GENESIS: action=convertxmltopml - <PML />
UI -> TACHYON: printer/print with pml payload
== BFF Controller ==
UI -> BFF: No api call is required
UI -> UI: switch the controller to Hybrid
UI -> GENESIS: add all items to genesis cart
== Repeat the sequence of Hybrid Controller ==
UI -> GENESIS: action=suspend api call to get the <XML />
UI -> GENESIS: action=convertxmltopml - <PML />
UI -> TACHYON: printer/print with pml payload
== Done ==
UI -> UI: clear the tender state to initial state
UI -> TACHYON: /tachyon/v2/register
UI -> TACHYON: /signal { signalType: success, level:1} - Green/Blinking Green
UI -> UI: Start Scanning Screen
end
end
end
group Activate after cancel partial tender
USER -> UI: Cancel Partial tender button click 
UI -> REDUCER: get the activated paymentModes
UI -> TACHYON: /suspend api with activated paymentModes ['CASH', 'CARD']
note right: response of SUSPEND is paymentModes:[{ card:{status: true}},{cash:{status:true}}]
UI -> GENESIS: action=contents 
GENESIS --> UI: contents will give tenderAmt:[{cash: $10}, {giftCard: $20}, {giftCard: $10}]
UI -> UI: Show the partially tendered amount on the UI to user with got it button
USER -> UI: select Got it confirmation to cancel the payment.
UI -> GENESIS: action=cancelTender
GENESIS --> UI: response of cancelTender is success
UI -> TACHYON: /deactivate - activated paymentModes ['CASH', 'CARD']
TACHYON --> UI: deactivation of paymentModes:[{ card:{status: true}},{cash:{status:true}}]
UI -> UI: get the CASH amount from deactivate response 
UI -> UI: calculate the amount to dispense 
alt#Gold #LightBlue If Cash > 0
    UI -> TACHYON: /tender-return amount: xxx
    TACHYON --> UI: /tender-return api success
    TACHYON --[#green]> UI: TENDER_REMOVAL_REQUESTED
    TACHYON --[#green]> UI: TENDER_REMOVED
    TACHYON --[#green]> UI: TENDER_RETURNED - success
end
UI -> UI: clear the state to initial state.
note right: get the activated paymentModes from reducer
UI -> UI: Processing Screen
UI -> UI: follow the Activate Sequence after paynow
end
== Repeat the sequence of  Activation on paynow ==
group Activate on Paynow
UI -> REDUCER: Get the available payment modes from reducer.
UI -> TACHYON: make an http://localhost - /activate api call to tachyon
note right: activate api should have the paymentModes: ['CASH', 'CARD'] as payload
TACHYON --> UI: response of activated paymentModes are true
note right: paymentModes:[{ card:{status: true}},{cash:{status:true}}]
UI -> UI: Insert/Swipe cash / card
end
group Activate after partial tender
alt #Gold #LightGoldenRodYellow if Activate is true - CASH & CARD
== Repeat the sequence of  Activation on paynow ==
UI -> REDUCER: Get the available payment modes from reducer.
UI -> TACHYON: make an http://localhost - /activate api call to tachyon
note right: activate api should have the paymentModes: ['CASH', 'CARD'] as payload
TACHYON --> UI: response of activated paymentModes are true
note right: paymentModes:[{ card:{status: true}},{cash:{status:true}}]
UI -> UI: Insert/Swipe cash / card
else #LightSalmon Activate [CASH, CARD] - partial activation failure
== Repeat the sequence of  Activation on paynow ==
UI -> REDUCER: Get the available payment modes from reducer.
UI -> TACHYON: make an http://localhost - /activate api call to tachyon
note right: activate api should have the paymentModes: ['CASH', 'CARD'] as payload
TACHYON --> UI: response of activated paymentModes = [{ cash:{ status: false}, {card:{status: true}}}]
UI -> UI: Choose Card as only tender mode to complete the sale Yes | No shown on UI
alt  #LightSkyBlue customer selected Yes to continue tender after partial activation failure
USER --> UI: Selected Yes to continue with the Card only
UI -> UI: Update the activated paymentModes and show Insert/Swipe card
else #LightGrey customer selected No
UI -> UI: Intervention - associate login required
UI -> TACHYON: Intervention/start - reasonCode: ['CASH_ACTIVATION_FAILURE']
UI -> TACHYON: signal - signalType: ERROR, level - 2 {Blinking Red}
ASSOCIATE -> UI: /bff/login
UI -> GENESIS: /contents
GENESIS --> UI: contents will give tenderAmt:[{cash: $10}, {giftCard: $20}, {giftCard: $10}]
UI -> UI: View Cart | Suspend Sale
alt #LightSlateGray customer selected View Cart
USER --> UI: View Cart
UI -> UI: Show the partially tendered amount on the UI to user
UI -> UI: check for cash paid amount & gift card tender
UI -> GENESIS: action=cancelTender
GENESIS --> UI: response of cancelTender is success
UI -> UI: Show the returned amount with cash & card info
alt#Gold #LightBlue If Cash > 0
    UI -> TACHYON: /tender-return amount: xxx
    TACHYON --> UI: /tender-return api success
    TACHYON --[#green]> UI: TENDER_REMOVAL_REQUESTED
    TACHYON --[#green]> UI: TENDER_REMOVED
    TACHYON --[#green]> UI: TENDER_RETURNED - success
end
UI -> GENESIS: /editCart
GENESIS -> UI: response of editCart - { totals: {}}
UI -> UI: Store Mode
else customer selected Suspend Sale
UI -> UI: Show the partially tendered amount on the UI to user
UI -> UI: check for cash paid amount & gift card tender
== Hybrid Controller ==
== Start ==
UI -> GENESIS: action=cancelTender
GENESIS --> UI: response of cancelTender is success
UI -> UI: Show the returned amount with cash & card info
alt#Gold #LightBlue If Cash > 0
    UI -> TACHYON: /tender-return amount: xxx
    TACHYON --> UI: /tender-return api success
    TACHYON --[#green]> UI: TENDER_REMOVAL_REQUESTED
    TACHYON --[#green]> UI: TENDER_REMOVED
    TACHYON --[#green]> UI: TENDER_RETURNED - success
end
UI -> GENESIS: action=editCart
== BFF Controller ==
UI -> BFF: /cancelAuthorization
UI -> BFF: /removePayment
UI -> BFF: /viewCart
UI -> UI: Flip Cart
UI -> GENESIS: add all exsisting items to cart and update qty price etc.,
== Done ==
UI -> GENESIS: action=suspend
GENESIS --> UI: response <XML>
UI -> GENESIS: convert XML to PML
GENESIS --> UI: response <PML />
GENESIS -> TACHYON: /printer/print - <pml>
UI -> UI: clear the tender state to initial state
UI -> UI: clear the cart state to initial state
UI -> TACHYON: /tachyon/v2/register
UI -> TACHYON: /signal { signalType: success, level:1} - Green/Blinking Green
UI -> UI: Start Scanning Screen
UI -> UI: If switchController is true then change the activeController to BFF
end
end
end
@enduml