@startuml
actor Associate as user1
actor Customer as user
participant UI as ui
participant DevicePlatform as tachyon

group lane open flow
user1->ui: sign-in in SCO
ui->genesis: /register?action=start, /action=registerInfo
ui->tachyon:  /getRegister call
genesis-->ui: regdeamon start and reginfo response
tachyon-->ui: get Register response
alt /register?action=start error or timeout
ui->ui: process error scenario
ui-> user1: error screen showing sigcap error, priter error with close lane button
end
alt /reginfo error or failed or timeout
ui->ui: process error scenario and add error banner for store info failure
ui-> user1: lane close showing error banner 
end
alt regdeamonStart, registerInfo passed and getRegister give non_operational status
loop 3 times getRegister for operational status
ui->tachyon: /getRegister call
tachyon-->ui: get Register response
alt getRegister give warning or operational status
ui-> ui: Process error and warning messages from the peripheral list show error banner messages
ui->  user1: show error banners for peripheral errors
ui-> user1: lane open successfully
end
else close the lane
ui-> user1: error screen showing sigcap error, priter error with close lane button
end 
else getRegister give warning or operational status
ui-> ui: Process error and warning messages from the peripheral list show error banner messages
ui->  user1: show error banners for peripheral errors
ui->tachyon: make Websocket connection
tachyon-->ui: socket connection message
alt socket connection failed
ui-->tachyon: reconnect socket connection
ui->user: Show error screen for socket connection
loop socket reconnect 5 times
alt socket reconnection not working
ui->user: show error screen and lane close button
end
else socket connection successful
ui->tachyon: make status light green
ui-> user1: lane open successfully
end
else socket connection successful 
note right: Establised websocket connection on lane open
ui->tachyon: make status light green
ui-> user1: lane open successfully
end
end
end

group Auto refresh error banners flow
tachyon-->ui: PERIPHERAL_STATUS event for peripheral (opeational | non-operational | warning)
ui->ui: capture PERIPHERAL_STATUS event and call handlers
alt if there is change in peripheral status and screen is store mode or start scanning screen
note right: example if CR is non_operational now tachyon send peripheral event for CR operational
alt If peripheral operational status change to operational to non_operational
ui->ui: Process error and warning messages from the peripheral list show error banner messages
ui->user: show new error banner with the exiting peripheral error are there (only if exiting peripheral errors are there)
ui->tachyon: make status light red
end
else if non_operational or warning status change to operational for peripheral
ui->ui: clear error banner for peripheral and show only other available peripherals errors
ui->user: show error banners for others peripherals if no other error then remove error 
end

group Close error banner flow
user->ui: close error banner
ui->tachyon: /getRegister call
tachyon-->ui: get register response
alt if there is operational status 
ui->user: remove error banners 
end
else warning or non_operational status from getRegister 
ui->ui: Process error and warning messages from the peripheral list show error banner messages
ui->user1: show error banners for peripheral errors
end

group store mode and get help flow
user->ui: select get help button
ui->tachyon: make status light red(signal API)
user1->ui: select on the way button
tachyon-->ui: make status light according to cart quantity (signal API) (item>0 ? "white" :)
user->ui: Add item
genesis-->ui: add item response (if first item added)
ui->tachyon: make status light white (normal)
ui->ui: update cart page
user1->ui: select store mode
user1->ui: sign in store mode
ui->tachyon: /getRegister API for peripheral status
tachyon-->ui: getRegister response
alt if there is waraning status or non_operational status
ui->ui: process errors and warnings (warnings are showing only in store mode)
ui->user: show error banners and warnings
end
end

group on click of paynow flow
user->ui: pay now
ui->tachyon: /getRegister call
tachyon-->ui: getRegister response
ui->ui: process get resgister response
alt cradle mount scanner error returned in /getRegister APi response
ui->ui: Show soft intervention for WIRELESS_SCANNER_NOT_REPLACED with two button coninue and proceeds without replacing
alt user mounted scanner successful
user->ui: mounted wireless scanner successfully
alt user click continue
ui-> tachyon: /getRegister call
tachyon--> ui: getRegister response
ui->user: show tender page
end
else user click proceeds without replacing
ui->user: intervention showing WIRELESS_SCANNER_NOT_REPLACED
ui->tachyon: make status light red
end
else user did not mount scanner back and click continue
loop check if user mounted scanner back 2 times
ui-> tachyon: /getRegister call
tachyon--> ui: getRegister response
ui->user: intervention showing WIRELESS_SCANNER_NOT_REPLACED
ui->tachyon: make status light red
end
end
end

== <size:40>Sale complete</size> ==

group sale complete hardware check flow
ui->tachyon: /getRegister call
tachyon-->ui: getRegister response
alt getregister give warning or operational status
ui-> user: reset the register for new transaction
ui-> tachyon: make status light green for new transaction
end
else getRegister give non_operational status
ui-> tachyon: make status light red
ui-> user: close lane
ui-> ui: process error banners
ui-> user: show error banners
end 




